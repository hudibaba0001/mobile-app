// Mocks generated by Mockito 5.4.5 from annotations
// in myapp/test/viewmodels/admin_users_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:myapp/models/admin_user.dart' as _i5;
import 'package:myapp/services/admin_api_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDashboardData_0 extends _i1.SmartFake implements _i2.DashboardData {
  _FakeDashboardData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AdminApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdminApiService extends _i1.Mock implements _i2.AdminApiService {
  MockAdminApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i4.Future<List<_i5.AdminUser>> fetchUsers() => (super.noSuchMethod(
        Invocation.method(
          #fetchUsers,
          [],
        ),
        returnValue: _i4.Future<List<_i5.AdminUser>>.value(<_i5.AdminUser>[]),
      ) as _i4.Future<List<_i5.AdminUser>>);

  @override
  _i4.Future<_i2.DashboardData> fetchDashboardData({
    DateTime? startDate,
    DateTime? endDate,
    String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDashboardData,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<_i2.DashboardData>.value(_FakeDashboardData_0(
          this,
          Invocation.method(
            #fetchDashboardData,
            [],
            {
              #startDate: startDate,
              #endDate: endDate,
              #userId: userId,
            },
          ),
        )),
      ) as _i4.Future<_i2.DashboardData>);

  @override
  _i4.Future<void> disableUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #disableUser,
          [uid],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> enableUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #enableUser,
          [uid],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [uid],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
